{"version":3,"sources":["components/Header/logo.svg","components/Header/Header.js","components/Footer/twitter.svg","components/Footer/Footer.js","pages/Home/things_mockup.png","pages/Home/error.svg","pages/Home/Home.js","pages/Link/success_icon.svg","pages/Link/link_icon.svg","pages/Link/LinkPage.js","components/AskQuestion/error.svg","components/AskQuestion/send_question_icon.svg","components/AskQuestion/AskQuestion.js","components/QuestionUnit/QuestionUnit.js","components/QuestionList.js","pages/Questions/message_icon.svg","pages/Questions/Questions.js","components/ErrorBoundary/ErrorBoundary.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","history","className","onClick","push","alt","src","logo","data-name","xmlns","viewBox","preserveAspectRatio","d","class","Footer","twitter","props","useHistory","setLinkId","setTitle","LinkId","useEffect","fetch","credentials","then","response","json","data","console","log","catch","err","id","type","name","required","placeholder","onChange","event","target","value","Title","length","errorMessage","document","getElementById","style","visibility","setTimeout","Promise","resolve","reject","onSubmit","newLink","method","headers","body","JSON","stringify","title","linkId","error_icon","demo","setValue","dbTitle","handleCopy","navigator","clipboard","writeText","DisplayLink","showSuccessMessage","success_icon","editOnViewClick","onSave","val","link_icon","window","open","focus","AskQuestion","useState","question","setQuestion","setCount","Count","handleChange","scroll","handleSubmit","y","smooth","send_question_icon","upvoteArray","QuestionUnit","questionId","questionContent","questionUpvotes","showUpvotes","setShowUpvotes","width","height","fill","Storage","sessionData","loadSessionData","sessionStorage","getItem","split","map","Number","includes","upvoteDuplicateNotif","animate","transform","duration","newUpvote","setItem","upvoteSuccessNotif","question_id","question_upvotes","QuestionList","createdAt","setUpvotes","Upvotes","questionComponent","i","Questions","UserQuestions","setUserQuestions","QuestionId","setQuestionId","CreatedAt","setCreatedAt","urlId","location","href","match","hasError","DisplayTitle","DisplayCount","n","upvotes","created","message_icon","ErrorComponent","ErrorBoundary","state","error","message","stack","info","componentStack","componentDidCatch","setState","this","children","React","Component","getDerivedStateFromError","App","newId","exact","path","newLinkId","newTitle","onUpdate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.df8365cf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.580bd986.svg\";","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport logo from './logo.svg';\r\n\r\nimport './header.css';\r\n\r\nfunction Header({history}) {\r\n    return (\r\n      <div className=\" sm:w-12/12 mx-auto  top-0 bg-white\">\r\n        <div className=\" md:w-10/12 mx-auto px-10\r\n        pt-5  \">\r\n          <div className=\"cursor-pointer\" onClick={() => history.push('/')}>\r\n            <img  alt='logo' src={logo} className=\"image-rendering\"/> \r\n          </div>\r\n        </div>\r\n        <div className=\"custom-shape-divider-top-1617219337\">\r\n          <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\r\n          <path d=\"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z\" class=\"shape-fill\"></path>\r\n         </svg>\r\n</div>\r\n      </div>\r\n\r\n       \r\n    );\r\n  }\r\n  \r\n  export default withRouter(Header);\r\n  ","export default __webpack_public_path__ + \"static/media/twitter.78867d3a.svg\";","import twitter from './twitter.svg';\r\nimport './footer.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n      <div className=\" footer mx-auto  bg-white \">\r\n          <div className=\"md:w-10/12 mx-auto px-10\r\n      py-8 bg-white\">\r\n            <div className=\"flex text-sm\">\r\n                <p className=\"pr-8\">Feature Request</p>\r\n                <p className=\"pr-8\">Support</p>\r\n                <p className=\"pr-8\">Legal</p>\r\n                <img  alt='twitter' src={twitter} className=\"image-rendering\"/>\r\n            </div>\r\n             \r\n          </div>\r\n        \r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Footer;\r\n  ","export default __webpack_public_path__ + \"static/media/things_mockup.4ff26a01.png\";","export default __webpack_public_path__ + \"static/media/error.1a12868c.svg\";","import React, { useEffect } from 'react';\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\nimport demo from './things_mockup.png';\r\nimport error_icon from './error.svg';\r\nimport './home.css';\r\n\r\nconst Home = props => {\r\n\r\n    let history = useHistory();\r\n    const {setLinkId, setTitle, LinkId} = props;\r\n\r\n    useEffect(( ) => {\r\n        fetch('/home', {\r\n            credentials: 'include'\r\n          }) \r\n          .then(response => response.json())\r\n        .then(data => {\r\n            if(data){\r\n                \r\n              let dbLink = data;\r\n              setLinkId(dbLink);\r\n              setTitle(\"\");\r\n              console.log('from home data ' + data)\r\n              //console.log('from home linkid ' + LinkId, Title)\r\n              \r\n            }\r\n        })\r\n        .catch(err => console.log('err'));\r\n    }, [LinkId]);\r\n\r\n    function handleChange(event) {\r\n    // Here, we invoke the callback with the new value\r\n    props.onChange(event.target.value);\r\n    //console.log(\"title length \" +props.Title.length)\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        let titleLength = props.Title.length;\r\n\r\n        if (titleLength < 8){\r\n            \r\n            const errorMessage = document.getElementById(\"errorMessage\");\r\n            \r\n            errorMessage.style.visibility = \"visible\";\r\n\r\n            setTimeout(() => {\r\n                errorMessage.style.visibility = \"hidden\";\r\n            }, 1000);\r\n        }\r\n        else {\r\n            // Here, we invoke the callback with the new value\r\n            const updateLink = new Promise((resolve, reject) => {\r\n                resolve (props.onSubmit())\r\n            });\r\n          \r\n            updateLink.then((newLink) => {\r\n                fetch('/home', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    title: props.Title,\r\n                    linkId: newLink,\r\n                })\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if(data){\r\n                        //console.log(\"from homepage: \" + data);\r\n                        props.setLinkId(newLink);\r\n                        //console.log(\"from homepage post: \" + data, newLink)\r\n                        history.push(`/link/${newLink}`); \r\n                       \r\n                    }\r\n                });\r\n            })\r\n\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n      \r\n     \r\n    return (\r\n        <div  className=\"sm:w-12/12 mx-auto homeBackground\">\r\n            <div className=\" md:w-10/12  mx-auto px-10 \">\r\n                <div  className='flex w-full pt-20 p-2 home_container md:space-x-2 max-w-full '>\r\n                    <div className=\"lg:w-6/12    space-y-11  text-left leading-10\">\r\n                        <div  className='lg:w-9/12 '>\r\n                            <p className='text-4xl font-black '>The best way to take questions from your audience</p>\r\n                            <p className='mt-9 text-lg font-medium'>Make your Q&A sessions faster. Share a question link with your audience.</p>\r\n                        </div>\r\n\r\n                        <div className='space-y-5 lg:w-9/12 '>\r\n                            <p className='text-3xl font-extrabold mt-32'>Get your question link</p>\r\n                            <p className='text-sm font-normal'>No registration required, it’s 100% free and super-fast.</p>\r\n                        </div>\r\n\r\n                        <div >\r\n                            <p className=' lg:w-9/12  text-base font-bold '>What’s the title of your event?</p>\r\n                            \r\n                            <div className='mt-5 lg:w-9/12 '>\r\n                                <div id=\"showError\" className='space-y-4 '>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        name=\"title\" \r\n                                        id=\"event-title\"\r\n                                        required\r\n                                        placeholder=\"E.g. Instagram live with Charles Dairo\" \r\n                                        onChange = {handleChange}\r\n                                        className=\"rounded-md text-black-500 pl-3\r\n                                        focus:outline-none focus:ring focus:-mid_blue shadow w-full h-12\" />\r\n                                    \r\n                                    <button \r\n                                        type=\"submit\" \r\n                                        className=\"blue_button text-lg font-bold \r\n                                        focus:outline-none focus:ring focus:-mid_blue \"\r\n\r\n                                        onClick={handleSubmit}>\r\n                                        Get your question link\r\n                                    </button>\r\n                                \r\n                                    \r\n                                    <div id=\"errorMessage\" className=\"error flex items-center text-base\">\r\n                                        <div className=\"w-5 h-5 mr-5\">\r\n                                            <img alt='error' src={error_icon} />\r\n                                        </div>\r\n                                        <div>Title must be minimum of 8 characters</div>\r\n                                    </div>                                \r\n                                </div>                            \r\n                            </div>                                               \r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div id=\"hide_this\" className='lg:w-5/12 p-2 rotate_this justify-self-end '>\r\n                        <div className=\"hp_image_container \">\r\n                        <img alt='demo' src={demo}/>\r\n                        </div>\r\n\r\n                        {/* <img alt='demo' src={demo}   className='image-rendering rotate_this hp_image ' /> */}\r\n                    </div>\r\n                        \r\n\r\n                </div>\r\n                \r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Home);\r\n  ","export default __webpack_public_path__ + \"static/media/success_icon.7c96047c.svg\";","export default __webpack_public_path__ + \"static/media/link_icon.c3998073.svg\";","import React, { useEffect } from 'react';\r\nimport { withRouter, useHistory} from \"react-router-dom\";\r\nimport \"./LinkPage.css\";\r\nimport EdiText from 'react-editext';\r\n\r\nimport Footer from '../../components/Footer/Footer';\r\n//import TestError from './../../TestError';\r\n\r\nimport success_icon from './success_icon.svg';\r\nimport link_icon from './link_icon.svg';\r\n\r\nconst LinkPage = (props) => {\r\n    let {setTitle, setValue,setLinkId} = props\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {        \r\n        // const queryString = window.location.href;\r\n        // const regex = \"([a-z0-9_-]*[]?)$\";\r\n        // const found = queryString.match(regex);\r\n        // const urlId = found[1]\r\n\r\n        console.log(\"props linkid \" + props.LinkId)\r\n        if (props.LinkId !== 0){\r\n            fetch(`/link/${props.LinkId}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                \r\n                let dbTitle = data.title\r\n                setTitle(dbTitle)\r\n                setValue(dbTitle)\r\n                setLinkId(props.LinkId)\r\n            \r\n            })\r\n        }\r\n        else{\r\n           \r\n        }\r\n    }, []);\r\n      \r\n    const handleSave = (val) => {\r\n        //console.log('Edited Value -> ', val)\r\n        props.setValue(val);\r\n        \r\n        // Here, we invoke the callback with the new value\r\n        props.onSave(val);\r\n    }\r\n\r\n    function handleCopy(event){\r\n       navigator.clipboard.writeText(DisplayLink);\r\n       \r\n    //    document.getElementById(\"linkCopied\").style.display = \"block\";\r\n\r\n    const showSuccessMessage = document.getElementById(\"showSuccessMessage\" );\r\n    \r\n    showSuccessMessage.style.visibility = \"visible\";\r\n    \r\n\r\n    setTimeout(() => {\r\n        showSuccessMessage.style.visibility = \"hidden\";\r\n    }, 1000);\r\n\r\n       \r\n    }\r\n\r\n\r\n    function handleUpdate(event) {\r\n        fetch('/link/:id', {\r\n        method: 'put',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            title: props.Title,\r\n            id: props.LinkId,\r\n            \r\n        })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data){\r\n                //console.log(props.Title, props.LinkId,)\r\n                //console.log(\"data from put request: \" + data)\r\n                //history.push(`/q/${props.LinkId}`, \"_blank\");\r\n                const win = window.open(`/q/${props.LinkId}`, \"_blank\");\r\n                 win.focus();\r\n            }\r\n        })\r\n        \r\n    }\r\n    let DisplayLink = `https://questionwave.com/q/${props.LinkId}`;\r\n\r\n    if (props.LinkId === 0){\r\n        return (\r\n            <div id=\"container\" className=\"md:w-6/12 mx-auto mt-10 px-10 py-28\">\r\n                <div className=\"text-7xl font-semibold text-center\">\r\n                     Oops!\r\n                </div>\r\n                <div className=\"pt-3 text-base font-normal text-center\">\r\n                     Can't access this page.\r\n                </div>\r\n                \r\n                    <div className=\"sm:w-6/12  mx-auto\">\r\n                    <button className=\"  mt-6 blue_button text-lg font-bold \r\n                                        focus:outline-none focus:ring focus:-mid_blue\"\r\n                            onClick={() => history.push('/')}>\r\n                        Go Home\r\n                    </button>\r\n                    </div>\r\n                    \r\n                \r\n               \r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>  \r\n                <div id=\"container\" className=\"md:w-6/12 mx-auto px-10 py-28 \">\r\n                    <div className=\"mt-10 rounded-xl bg-light_green border border-green p-5 flex items-center\">  \r\n                        <div className=\"w-5 h-5 mr-5\">\r\n                        <img alt='success' src={success_icon} />\r\n                        </div>\r\n                        <div>\r\n                            Great! Your your question link has been created. \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"editTitle\" className=\"mt-16 flex items-center\" >\r\n                        <EdiText \r\n                            editOnViewClick \r\n                            \r\n                            type=\"text\" className=\"text-3xl font-extrabold\" value={props.value} onSave={handleSave} />\r\n                        {/* <div className=\"text-3xl font-extrabold\">  \r\n                        {props.Title} \r\n                        </div>\r\n                        <button className=\"w-5 h-5 ml-5\" >\r\n                            <img alt='edit title' src={edit_icon} />\r\n                        </button> */}\r\n                    </div>\r\n\r\n                    <div className=\"mt-10 displayLink flex items-center cursor-pointer\" onClick={handleCopy}>\r\n                        {/* <input \r\n                            type=\"text\" \r\n                            name=\"title\" \r\n                            id=\"event-title\"\r\n                            value= {DisplayLink}\r\n                            readOnly\r\n                            className=\"rounded-md text-black-500 pl-3\r\n                            focus:outline-none shadow w-full h-12 \" />  */}\r\n                            <div className=\"w-5 h-5 mr-5 \">\r\n                                <img alt='link' src={link_icon} />\r\n                            </div>\r\n                            <div>{DisplayLink}</div>\r\n                            \r\n                    </div>\r\n\r\n                    <div className=\" mt-6 sm:flex justify-between  sm:space-x-4\">\r\n                        <div className=\"sm:w-1/2 pt-4\">\r\n                            <button className=\"blue_button text-lg font-bold focus:outline-none focus:ring focus:border-mid_blue\"\r\n                                onClick={handleCopy}>\r\n                                Copy link\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"sm:w-1/2 pt-4\">\r\n                            <button className=\"white_button text-lg font-bold focus:outline-none focus:ring focus:border-mid_blue\"\r\n                                onClick={handleUpdate}>\r\n                                Preview link\r\n                            </button>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    <div id=\"showSuccessMessage\" className=\"successMessageStyle flex items-center text-base\" >\r\n                        <div className=\"w-5 h-5 mr-5\">\r\n                        <img alt='success' src={success_icon} />\r\n                            </div>\r\n                        <div>Link successfully copied!</div>\r\n                    </div>\r\n                    {/* <div id=\"linkCopied\" className=\"px-4 py-3 leading-normal text-green bg-light_green mt-6 border rounded-lg \" role=\"alert\">\r\n                        <p className=\"text-center\">Link successfully copied!</p>\r\n                    </div> */}\r\n\r\n                    {/* <div id=\"linkCopied\" \r\n                        className=\"bg-light_green  border-green rounded-b \r\n                        text-green mt-6 px-4 py-2 shadow-md animate-pulse hidden\"\r\n                        role=\"alert\"> \r\n\r\n                        <div>\r\n                        <p class=\"text-sm \">Link successfully copied!</p>\r\n                        </div>\r\n                    \r\n                    </div> */}\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n                \r\n        );\r\n    }\r\n\r\n      \r\n    \r\n}\r\n  \r\n  export default withRouter(LinkPage);\r\n  ","export default __webpack_public_path__ + \"static/media/error.1a12868c.svg\";","export default __webpack_public_path__ + \"static/media/send_question_icon.2d971d84.svg\";","import React, {useState} from 'react';\r\nimport { ScrollTo } from \"react-scroll-to\";\r\nimport error_icon from './error.svg';\r\nimport './askQuestion.css';\r\n\r\nimport send_question_icon from './send_question_icon.svg';\r\n\r\nfunction AskQuestion(props) {\r\n\r\n    //let newQuestion \r\n    const [question, setQuestion] = useState(\"\");\r\n    const {Count, setCount} = props;\r\n\r\n\r\n    function handleChange(event){\r\n        setQuestion(event.target.value);\r\n    }\r\n\r\n    // const handleKeypress = event => { \r\n    //     //it triggers by pressing the enter key\r\n    //   if (event.key ===  'Enter') {\r\n    //     handleSubmit();\r\n    //     console.log(\"handle keypress\");\r\n    //   }\r\n    // };\r\n  \r\n    function handleSubmit(event) {\r\n        let questionLength = question.length;\r\n\r\n        if (questionLength < 8){\r\n            const errorMessage = document.getElementById(\"errorMessage\");\r\n            errorMessage.style.visibility = \"visible\";\r\n            setTimeout(() => {\r\n                errorMessage.style.visibility = \"hidden\";\r\n            }, 1000);\r\n        }\r\n\r\n        else{\r\n            fetch('/q/:id', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                linkId: props.LinkId,\r\n                question: question,\r\n            })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data){\r\n                    //console.log(\"new question: \" + data);\r\n                    //UPDATE COUNT TO TRIGGER USEEFFECT ON QUESTION PAGE (RE-RENDER PAGE TO SHOW NEW QUESTION)\r\n                    setCount(Count => Count + 1); \r\n\r\n                    setQuestion(\"\")\r\n                }       \r\n            })\r\n        }\r\n    };\r\n\r\n \r\n \r\n    return (\r\n        <ScrollTo>\r\n            {({ scroll }) => (\r\n\r\n                <div >\r\n                    <div id=\"askNew\" className=\" flex items-center \">\r\n                    <input \r\n                        id=\"mainInput\"\r\n                        type=\"text\"\r\n                        value={question}\r\n                        className=\"rounded-md w-full h-12 text-black-500 outline-none ring border-mid_blue shadow p-5 overflow-auto\" \r\n                        placeholder='Ask a question...'\r\n                        // onKeyPress= {handleKeypress}  \r\n                        onChange={handleChange} \r\n                        />\r\n                        \r\n                        <button \r\n                            onClick={() => {handleSubmit(); setTimeout(()=>scroll({ y: 50000000000000000000000000000, smooth: true }), 1000)}}  \r\n                            type=\"submit\" \r\n                            className=\"ask_button  w-7 h-7 \">\r\n                            <img alt=\"send question\" src={send_question_icon}/>\r\n                        </button>\r\n                    </div>\r\n\r\n                        <div id=\"errorMessage\" className=\"error flex items-center text-base\">\r\n                            <div className=\"w-5 h-5 mr-5\">\r\n                                <img alt=\"error\" src={error_icon}/>\r\n                            </div>\r\n                            <div>Question must be minimum of 8 characters</div>\r\n                        </div>\r\n                </div>\r\n                \r\n            )}\r\n        </ScrollTo>\r\n    );\r\n}\r\n  \r\n  export default AskQuestion;\r\n  \r\n  ","import React, { useState } from \"react\";\r\nimport './QuestionUnit.css';\r\n\r\n\r\nlet upvoteArray = [];\r\nif(typeof(Storage) !== \"undefined\") {\r\n       // sessionStorage.removeItem('upvoteArray');\r\n    // let loadSessionData = sessionStorage.getItem('upvoteArray');\r\n    // let sessionData;\r\n    // if (loadSessionData != null) {\r\n    //    sessionData = loadSessionData.split(',');\r\n    // }\r\n    // else {\r\n    //     sessionData = [1] \r\n    // }\r\n    // upvoteArray.push(sessionData);\r\n\r\n    // console.log(\"session \"+sessionStorage.clickcount, \"upvoteArray \"+ upvoteArray);\r\n    // console.log(\" sessionData \"+ sessionData);\r\n    // console.log(\"is Array? \" + Array.isArray(upvoteArray));\r\n    \r\n   \r\n}\r\nconst QuestionUnit = (props) => {\r\n    \r\n    let  {questionId, questionContent,  questionUpvotes, LinkId} = props;\r\n    let [showUpvotes, setShowUpvotes] = useState(questionUpvotes);\r\n    \r\n    \r\n    \r\n    function handleUpvote(event) {    \r\n                \r\n            if(typeof(Storage) !== \"undefined\") {\r\n\r\n                let loadSessionData = sessionStorage.getItem('upvoteArray');\r\n                let sessionData;\r\n                if (loadSessionData != null) {\r\n                    sessionData = loadSessionData.split(',').map(Number);\r\n                }\r\n                else {\r\n                    sessionData = [1]\r\n                }\r\n                \r\n                upvoteArray = sessionData;\r\n                //console.log(\" sessionData, upvoteArray, questionId \"+ sessionData, upvoteArray, questionId);\r\n\r\n                if (upvoteArray.includes(questionId)){\r\n\r\n                    //alert(\"duplicate upvote\")\r\n                    const upvoteDuplicateNotif =  document.getElementById(\"upvoteDuplicateNotif\");\r\n                    upvoteDuplicateNotif.style.visibility = \"visible\";\r\n                    upvoteDuplicateNotif.animate([\r\n                        // keyframes                        \r\n                               { transform: 'translateY(50px)'}                               \r\n                      ], {\r\n                        // timing options\r\n                        duration: 500\r\n                      });\r\n\r\n                    setTimeout(() => {\r\n                        upvoteDuplicateNotif.style.visibility = \"hidden\";\r\n                    }, 1300);\r\n                }     \r\n                else {\r\n                    let newUpvote =  questionUpvotes + 1 ;               \r\n                    setShowUpvotes(newUpvote);        \r\n                    upvoteArray.push(questionId);\r\n                    //console.log(\"upvote array \" + upvoteArray)\r\n                    sessionStorage.setItem('upvoteArray', upvoteArray);\r\n\r\n                    //console.log(\"questionId, questionUpvotes, showUpvotes, newUpvote \" + questionId, questionUpvotes, showUpvotes, newUpvote);\r\n\r\n                    const upvoteSuccessNotif =  document.getElementById(\"upvoteSuccessNotif\");\r\n                    upvoteSuccessNotif.style.visibility = \"visible\";\r\n                    upvoteSuccessNotif.animate([\r\n                        // keyframes                        \r\n                               { transform: 'translateY(50px)'}                               \r\n                      ], {\r\n                        // timing options\r\n                        duration: 500\r\n                      });\r\n\r\n                    setTimeout(() => {\r\n                        upvoteSuccessNotif.style.visibility = \"hidden\";\r\n                    }, 1000);\r\n                    \r\n\r\n                    fetch('/q/:id', {\r\n                    method: 'PUT',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        question_id: questionId,\r\n                        question_upvotes: newUpvote,\r\n                        id: LinkId\r\n                    })\r\n                    })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if(data){\r\n                            //console.log(data)\r\n                        }\r\n                    })\r\n                   // console.log(\"session \"+sessionStorage.clickcount, \"questionId \"+ questionId);\r\n                }\r\n            }       \r\n    }\r\n   \r\n\r\n\r\n    return (\r\n        <div> \r\n            <div id=\"upvoteSuccessNotif\" className=\"sm:w-3/12 mx-auto bg-light_green border border-green p-2 rounded-md text-center flex justify-center items-center text-sm \">\r\n                <svg className=\"mr-1\" width=\"16\" height=\"15\" viewBox=\"0 0 33 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M16.9479 0C13.788 0 10.699 0.938383 8.07166 2.69649C5.44428 4.45459 3.39649 6.95345 2.18724 9.87706C0.977992 12.8007 0.661597 16.0177 1.27807 19.1214C1.89454 22.2251 3.41618 25.0761 5.65059 27.3137C7.88499 29.5513 10.7318 31.0752 13.831 31.6926C16.9302 32.3099 20.1426 31.9931 23.062 30.7821C25.9814 29.5711 28.4766 27.5203 30.2322 24.8891C31.9877 22.2579 32.9248 19.1645 32.9248 16C32.9248 11.7565 31.2415 7.68687 28.2453 4.68629C25.249 1.68571 21.1852 0 16.9479 0ZM27.3828 10.63L14.2618 23.76L6.51304 16C6.24821 15.7348 6.09943 15.3751 6.09943 15C6.09943 14.6249 6.24821 14.2652 6.51304 14C6.77788 13.7348 7.13707 13.5858 7.5116 13.5858C7.88613 13.5858 8.24532 13.7348 8.51015 14L14.2818 19.78L25.4057 8.65C25.5368 8.51868 25.6925 8.41451 25.8638 8.34344C26.0351 8.27237 26.2188 8.23579 26.4042 8.23579C26.5897 8.23579 26.7733 8.27237 26.9446 8.34344C27.116 8.41451 27.2716 8.51868 27.4028 8.65C27.5339 8.78132 27.6379 8.93722 27.7089 9.1088C27.7799 9.28038 27.8164 9.46428 27.8164 9.65C27.8164 9.83572 27.7799 10.0196 27.7089 10.1912C27.6379 10.3628 27.5339 10.5187 27.4028 10.65L27.3828 10.63Z\" fill=\"#13B43D\"/>\r\n                </svg>\r\n                Upvoted\r\n            </div>\r\n            <div id=\"upvoteDuplicateNotif\" className=\"sm:w-4/12 mx-auto bg-red  p-2 rounded-md text-center flex justify-center items-center  text-sm \">\r\n                <svg className=\"mr-1\" width=\"15\" height=\"15\" viewBox=\"0 0 27 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M13.2707 0C5.95333 0 0 5.98133 0 13.3333C0 20.6853 5.98133 26.6667 13.3333 26.6667C20.6853 26.6667 26.6667 20.6853 26.6667 13.3333C26.6667 5.98133 20.6573 0 13.2707 0ZM14.6667 20H12V17.3333H14.6667V20ZM14.6667 14.6667H12V6.66667H14.6667V14.6667Z\" fill=\"#CF062E\"/>\r\n                </svg>\r\n                You can only upvote once\r\n            </div>\r\n        <div  className=\"my-16\">\r\n            <div className=\" px-10 py-5  bg-white rounded-2xl h-auto flex items-center space-x-4 select-none overflow-auto \">\r\n                <div className=\"flex-col  -mt-1 items-center justify-start mr-2 w-5  \">                                    \r\n                    <button id=\"upvoteButton\" className=\"upvoteButton text-blue p-1 -mt-1\" onClick={handleUpvote}>\r\n                        <svg width=\"13\" height=\"8\" viewBox=\"0 0 13 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"upvote_icon  \">\r\n                            <path d=\"M12.9056 7.33958L6.84161 0.154254C6.66803 -0.0514181 6.33381 -0.0514181 6.15839 0.154254L0.094437 7.33958C-0.130838 7.60752 0.0722788 8 0.436042 8H12.564C12.9277 8 13.1308 7.60752 12.9056 7.33958Z\"  />\r\n                        </svg>\r\n                    </button> \r\n                     \r\n                    <div className=\" text-center text-lg text-gray -mt-1 \">\r\n                        {showUpvotes} \r\n                    </div>\r\n                    <div id=\"result\"></div>\r\n                </div>\r\n\r\n                <span className=\" text-lg  md:w-10/12 sm:w-11/12 w-9/12\">\r\n                 {questionContent} \r\n                </span>\r\n                                    \r\n            </div>\r\n\r\n            \r\n         </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default QuestionUnit; ","import React from 'react';\r\nimport QuestionUnit from './QuestionUnit/QuestionUnit';\r\n\r\nconst QuestionList = ({questionId,  questionContent, questionUpvotes, createdAt,setUpvotes, Upvotes, LinkId}) => {\r\n   const questionComponent = createdAt.map((question,i) => {\r\n       return <QuestionUnit key={i} questionUpvotes={questionUpvotes[i]} questionContent={questionContent[i]} \r\n       questionId={questionId[i]} setUpvotes={setUpvotes} LinkId={LinkId} />\r\n   })\r\n\r\n   return (\r\n       <div>\r\n           {questionComponent}\r\n       </div>\r\n   )\r\n    \r\n}\r\n\r\nexport default QuestionList;","export default __webpack_public_path__ + \"static/media/message_icon.86d12c71.svg\";","import React, { useState, useEffect} from 'react';\r\n\r\nimport AskQuestion from '../../components/AskQuestion/AskQuestion';\r\nimport QuestionList from '../../components/QuestionList';\r\n\r\nimport './Questions.css';\r\nimport message_icon from './message_icon.svg';\r\n\r\nconst Questions = (props) => {\r\n\r\n  const [Count, setCount] = useState(0);\r\n  const [Upvotes, setUpvotes] = useState([]);\r\n  const [UserQuestions, setUserQuestions] = useState([]);\r\n  const [QuestionId, setQuestionId] = useState([]);\r\n  const [CreatedAt, setCreatedAt] = useState([]);\r\n  const {setTitle,setLinkId} = props;\r\n\r\n  useEffect(() => {\r\n    //COLLECT ID FROM URL - https://www.regextester.com/102550\r\n    const queryString = window.location.href;\r\n    const regex = \"([a-z0-9_-]*[]?)$\";\r\n    const found = queryString.match(regex);\r\n    const urlId = found[1]\r\n\r\n    //RE-INITIALIZE STATE ID, UPVOTE AND QUESTIONS TO EMPTY ARRAYS\r\n    setQuestionId([]);\r\n    setUpvotes([]);\r\n    setUserQuestions([]);\r\n    setCreatedAt([]);\r\n\r\n    //GET DATA FROM DATABASE\r\n    fetch(`/q/${urlId}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.log(data)\r\n        if(data){\r\n            if (data.length === 0){\r\n                return { hasError: true };\r\n            }\r\n            else{\r\n                //MATCH VARIABLES TO DATA FROM DATABASE\r\n                let DisplayTitle = data[0].title;\r\n                let DisplayCount = (data.length);\r\n\r\n                let n = data.length;\r\n                for (let i=0; i<n; i++){\r\n                    if (data[i].question !== null) {\r\n                        //console.log(\"so true \" + i );\r\n                        //SET STATE ARRAY WITH DATA FROM DATABASE\r\n                        setQuestionId(QuestionId => [...QuestionId,data[i].question_id])\r\n                        setUpvotes(Upvotes => [...Upvotes,data[i].upvotes])\r\n                        setUserQuestions(UserQuestions => [...UserQuestions,data[i].question]);\r\n                        setCreatedAt(CreatedAt => [...CreatedAt,data[i].created]);\r\n                    }\r\n                else{\r\n                    console.log(\" \");\r\n                }\r\n                }           \r\n                //SET STATE WITH DATA FROM DATABASE\r\n                setTitle(DisplayTitle);\r\n                setLinkId(urlId);\r\n                setCount(DisplayCount - 1);\r\n                \r\n            }\r\n            }\r\n           \r\n            \r\n        else {\r\n           console.log(\"\");\r\n        }\r\n    })\r\n  }, [Count]);\r\n\r\n  \r\n\r\n    \r\n  if (Count < 1 ) {\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"md:w-10/12 mx-auto static   \">\r\n                <div className=\"md:w-9/12 mx-auto px-10 py-20 \">\r\n            \r\n                <div className=\"\" >\r\n                    <div className=\"text-3xl font-extrabold\">  \r\n                       {props.Title} \r\n                    </div>\r\n                    <div className=\"mt-5 text-xl font-bold text-gray\">  \r\n                        {Count} questions so far\r\n                    </div>\r\n                </div>\r\n\r\n                 <div className=\"mt-32 px-10 py-5 bg-white rounded-2xl h-auto flex space-x-4 select-none \">\r\n                    <span className=\" self-stretch mt-1 w-10\">\r\n                        <img alt='message' src={message_icon} />\r\n                    </span>\r\n                    <span className=\" text-lg\">\r\n                    Questions will show up here once people start asking. Go ahead, \r\n                share your question link with people!\r\n                    </span>\r\n                                        \r\n                </div> \r\n                \r\n            </div>\r\n            \r\n            </div>\r\n            <div className=\"w-full bottom-0 pb-6 fixed  bg-light_blue \">\r\n                <div className=\"md:w-10/12 mx-auto py-2   \">\r\n                    <div className=\" md:w-9/12 px-10 mx-auto mb-10  pt-2 h-14 \">\r\n                        <AskQuestion LinkId={props.LinkId}\r\n                        Count={Count} \r\n                        setCount={setCount}/>   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            \r\n    );\r\n  }\r\n\r\n  else {\r\n    return (\r\n\r\n        <div className=\"w-full \">\r\n            <div className=\"md:w-10/12 mx-auto static  \">\r\n                <div className=\"md:w-9/12 mx-auto px-10 py-20\">\r\n               \r\n            \r\n                <div className=\"\" >\r\n                    \r\n                    <div className=\"text-3xl font-extrabold\">  \r\n                       {props.Title} \r\n                    </div>\r\n                    <div className=\"mt-5 text-xl font-bold text-gray\">  \r\n                        {Count} questions so far\r\n                    </div>\r\n                </div>\r\n\r\n                <div >\r\n                        <QuestionList \r\n                            LinkId={props.LinkId} \r\n                            createdAt={CreatedAt} \r\n                            questionId={QuestionId}  \r\n                            questionContent={UserQuestions} \r\n                            questionUpvotes={Upvotes}\r\n                            setUpvotes={setUpvotes}\r\n                             />                   \r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            </div>\r\n            <div className=\"w-full bottom-0 pb-6 fixed  bg-light_blue \">\r\n                <div className=\"md:w-10/12 mx-auto py-2   \">\r\n                    <div className=\" md:w-9/12 px-10 mx-auto mb-10  pt-2 h-14 \">\r\n                        <AskQuestion LinkId={props.LinkId}\r\n                        Count={Count} \r\n                        setCount={setCount}/>                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            \r\n    );\r\n  }\r\n  \r\n    \r\n  \r\n}\r\n  \r\n  export default Questions;\r\n  ","import React from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst ErrorComponent = () => {\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"container\" className=\"md:w-6/12 mx-auto mt-10 px-10 py-28\">\r\n                <div className=\"text-7xl font-semibold text-center\">\r\n                     Oops!\r\n                </div>\r\n                <div className=\"pt-3 text-base font-normal text-center\">\r\n                     You have wondered too far.\r\n                </div>\r\n                \r\n                    <div className=\"sm:w-6/12  mx-auto\">\r\n                    <button className=\"  mt-6 blue_button text-lg font-bold \r\n                                        focus:outline-none focus:ring focus:-mid_blue\"\r\n                            onClick={() => history.push('/')}>\r\n                        Go Home\r\n                    </button>\r\n                    </div>\r\n                    \r\n                \r\n               \r\n            </div>\r\n  )\r\n};\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  state = {\r\n    hasError: false,\r\n    error: { message: \"\", stack: \"\" },\r\n    info: { componentStack: \"\" }\r\n  };\r\n\r\n  static getDerivedStateFromError = error => {\r\n    return { hasError: true };\r\n  };\r\n\r\n  componentDidCatch = (error, info) => {\r\n    this.setState({ error, info });\r\n  };\r\n\r\n  render() {\r\n    const { hasError, error, info } = this.state;\r\n    console.log(error, info);\r\n    const { children } = this.props;\r\n\r\n    return hasError ? <ErrorComponent /> : children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useState} from 'react';\nimport Header from './components/Header/Header';\nimport Home from './pages/Home/Home';\nimport LinkPage from './pages/Link/LinkPage';\nimport Questions from './pages/Questions/Questions';\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport './App.css';\n\n\n\nfunction App () {\n  const [Title, setTitle] = useState(\" \");\n  const [LinkId, setLinkId] = useState(0);\n  const [value, setValue] = useState(\" \")\n\n  function handleChange(newTitle) {\n    setTitle(newTitle);\n  }\n\n  // GENERATE NEW LINK ID FOR QUESTION LINK AND DATABASE    \n  var newId = LinkId;\n  function increment(){\n    newId++;\n    return newId;\n  }  \n  function handleSubmit(newLinkId) {\n    increment();\n    setLinkId(newId);\n    console.log(\"from app \"+newId,LinkId)\n    return newId;\n    \n    \n  }\n\n  function handleUpdate(newTitle) {\n    setLinkId(LinkId);\n  }\n\n  function handleSave(newTitle) {\n    setTitle(newTitle);\n  }\n\n  \n\n  return (\n    <div className=\"full_screen\"> \n    \n      \n      <Router>\n        {/* <p>Title: {Title}</p>\n        <p>LinkId: {LinkId}</p> */}\n      <ErrorBoundary>\n        <Header/>\n        \n        <Switch>\n          \n        <Home \n          exact path='/' \n          Title={Title} \n          LinkId={LinkId} \n          setTitle={setTitle}\n          setLinkId={setLinkId}\n          onSubmit={handleSubmit} \n          onChange={handleChange}  /> \n\n        <LinkPage \n          path='/link/:linkId'\n          Title={Title} \n          LinkId={LinkId}\n          value={value} \n          setTitle={setTitle}\n          setLinkId={setLinkId}\n          setValue={setValue}\n          onUpdate={handleUpdate} \n          onSave={handleSave}  /> \n\n        <Questions \n          path='/q/:linkId'\n          Title={Title} \n          setTitle={setTitle}\n          setLinkId={setLinkId}\n          LinkId={LinkId}\n           />                       \n        </Switch>\n        </ErrorBoundary>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}